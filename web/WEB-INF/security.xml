<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" 
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!-- This ensures that every page in the application is secured and authorised 
        by restricting access only to users with role=USER
        Source: Docs.spring.io, '2. Security Namespace Configuration', 2015. [Online]. Available: http://docs.spring.io/spring-security/site/docs/3.0.x/reference/ns-config.html#ns-getting-started. [Accessed: 06- Apr- 2015].
    -->  
    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/admin" access="ROLE_USER"/>
        <!--        <intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <intercept-url pattern="/secure/**" access="ROLE_USER" requires-channel="https" />
        <intercept-url pattern="/**" access="ROLE_USER" requires-channel="any"/> -->
        
        <access-denied-handler error-page="/WEB-INF/security.xml"/>
        
        <form-login login-page="/login" 
                    default-target-url="/default"
                    authentication-failure-url="/login?errorPage"
                    username-parameter="username"
                    password-parameter="password"/>
        <logout invalidate-session="true"               
                logout-success-url="/login?logout"
                logout-url="/j_spring_security_logout"/> 

                <!--  the line below enables csrf protection-->
                <csrf/>   
                 
        <session-management>
            <!--            this will prevent users from having multible login sessions open as they need to be validated.-->
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
        </session-management>   
                 
    </http>

  
    
    <!-- Definition of additional users to enable them to access the application 
    Source: Docs.spring.io, '2. Security Namespace Configuration', 2015. [Online]. Available: http://docs.spring.io/spring-security/site/docs/3.0.x/reference/ns-config.html#ns-getting-started. [Accessed: 06- Apr- 2015].
    -->
    <authentication-manager>
        <authentication-provider> 
            <!--      <authentication-provider>:  this element chech against the role of the user and enables or decables him to access the application-->
<!--            <user-service data-source-ref="dataSource"
              usersByUsernameQuery= "SELECT username, password, enabled FROM users WHERE username = ?"
              authoritiesByUsernameQuery="SELECT username, role FROM user_roles WHERE username = ?"
            />-->
            
            <user-service> 
                <user name="ck00113" password="password123" authorities="ROLE_ADMIN" />
<!--                <user name="abc00111" password="password123" authorities="ROLE_USER" />-->
            </user-service>
        </authentication-provider>
    </authentication-manager>
    
</beans:beans>
